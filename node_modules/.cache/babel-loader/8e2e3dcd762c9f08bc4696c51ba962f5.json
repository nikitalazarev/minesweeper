{"ast":null,"code":"import _classCallCheck from\"/home/nick/git/minesweeper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/nick/git/minesweeper/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/nick/git/minesweeper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/nick/git/minesweeper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/nick/git/minesweeper/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/nick/git/minesweeper/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./App.css';var _=require('underscore');var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.state={cellsMount:{row:8,col:10},minesMount:10,result:{isWin:false,open:false},winTitles:['YOU WIN!','GAME OVER'],cells:new Array()};_this.openCell=_this.openCell.bind(_assertThisInitialized(_this));_this.markCell=_this.markCell.bind(_assertThisInitialized(_this));_this.restart=_this.restart.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"openCell\",value:function openCell(pos){var updatedCells=this.state.cells.map(function(el){return el;});if(updatedCells[pos.row][pos.col].state!=='mark'){updatedCells[pos.row][pos.col].state='open';if(updatedCells[pos.row][pos.col].isMine){updatedCells.map(function(el){el.map(function(cell){if(cell.isMine){cell.state='open mine inactive';}else{cell.state=\"\".concat(cell.state,\" inactive\");}});});}else{var openedEmpty=[];for(var i=0;i<updatedCells.length;i++){for(var j=0;j<updatedCells[i].length;j++){if(updatedCells[i][j].cellsAround&&updatedCells[i][j].minesAround===0&&updatedCells[i][j].state==='open'&&!openedEmpty.includes(updatedCells[i][j].id)){updatedCells[i][j].cellsAround.map(function(cell){cell.state='open';});openedEmpty.push(updatedCells[i][j].id);i=0;j=0;}}}}this.setState({cells:updatedCells});this.checkResult('open',updatedCells);}}},{key:\"markCell\",value:function markCell(pos){var updatedCells=this.state.cells.map(function(el){return el;});if(updatedCells[pos.row][pos.col].state==='close'){updatedCells[pos.row][pos.col].state='mark';}else if(updatedCells[pos.row][pos.col].state==='mark'){updatedCells[pos.row][pos.col].state='close';}this.setState({cells:updatedCells});this.checkResult('mark',updatedCells);}},{key:\"checkResult\",value:function checkResult(action,updatedCells){if(action==='mark'){var rightMarked=0;var wrongMarked=0;updatedCells.map(function(el){el.map(function(cell){if(cell.state==='mark'){if(cell.isMine){rightMarked++;}else{wrongMarked++;}}});});var isWin=rightMarked===this.state.minesMount&&!wrongMarked?true:false;if(isWin){updatedCells.map(function(el){el.map(function(cell){cell.state=cell.state+' inactive';});});}if(isWin){this.setState({cells:updatedCells,result:{isWin:isWin,open:true}});}}if(action==='open'){var _isWin=true;updatedCells.map(function(el){el.map(function(cell){if(cell.state==='open mine inactive'){_isWin=false;}});});if(!_isWin){this.setState({result:{isWin:_isWin,open:true}});}}}},{key:\"restart\",value:function restart(){var _this$state=this.state,minesMount=_this$state.minesMount,cellsMount=_this$state.cellsMount;var arr=_.shuffle(_.range(cellsMount.row*cellsMount.col));var minesCells=_.range(minesMount).map(function(el){return arr[el];});var cells=new Array();var cellCounter=0;for(var i=0;i<cellsMount.row;i++){cells[i]=new Array();for(var j=0;j<cellsMount.col;j++){var cell={id:cellCounter,pos:{row:i,col:j},isMine:minesCells.includes(cellCounter),cellsAround:new Array(),minesAround:null,state:'close'};cells[i].push(cell);cellCounter++;}}cells.map(function(el){el.map(function(cell){if(!cell.isMine){var koef=-1;var minesCounter=0;for(var _i=0;_i<3;_i++){if(cells[cell.pos.row-1]&&cells[cell.pos.row-1][cell.pos.col+koef]){cell.cellsAround.push(cells[cell.pos.row-1][cell.pos.col+koef]);if(cells[cell.pos.row-1][cell.pos.col+koef].isMine){minesCounter++;}}if(cells[cell.pos.row+1]&&cells[cell.pos.row+1][cell.pos.col+koef]){cell.cellsAround.push(cells[cell.pos.row+1]&&cells[cell.pos.row+1][cell.pos.col+koef]);if(cells[cell.pos.row+1][cell.pos.col+koef].isMine){minesCounter++;}}koef++;}koef=-1;for(var _i2=0;_i2<2;_i2++){if(cells[cell.pos.row][cell.pos.col+koef]){cell.cellsAround.push(cells[cell.pos.row][cell.pos.col+koef]);if(cells[cell.pos.row][cell.pos.col+koef].isMine){minesCounter++;}}koef=1;}cell.minesAround=minesCounter;}});});this.setState({cells:cells,result:{isWin:this.state.result.isWin,open:false}});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this$state2=this.state,minesMount=_this$state2.minesMount,cellsMount=_this$state2.cellsMount;var arr=_.shuffle(_.range(cellsMount.row*cellsMount.col));var minesCells=_.range(minesMount).map(function(el){return arr[el];});var cells=new Array();var cellCounter=0;for(var i=0;i<cellsMount.row;i++){cells[i]=new Array();for(var j=0;j<cellsMount.col;j++){var cell={id:cellCounter,pos:{row:i,col:j},isMine:minesCells.includes(cellCounter),cellsAround:new Array(),minesAround:null,state:'close'};cells[i].push(cell);cellCounter++;}}cells.map(function(el){el.map(function(cell){if(!cell.isMine){var koef=-1;var minesCounter=0;for(var _i3=0;_i3<3;_i3++){if(cells[cell.pos.row-1]&&cells[cell.pos.row-1][cell.pos.col+koef]){cell.cellsAround.push(cells[cell.pos.row-1][cell.pos.col+koef]);if(cells[cell.pos.row-1][cell.pos.col+koef].isMine){minesCounter++;}}if(cells[cell.pos.row+1]&&cells[cell.pos.row+1][cell.pos.col+koef]){cell.cellsAround.push(cells[cell.pos.row+1]&&cells[cell.pos.row+1][cell.pos.col+koef]);if(cells[cell.pos.row+1][cell.pos.col+koef].isMine){minesCounter++;}}koef++;}koef=-1;for(var _i4=0;_i4<2;_i4++){if(cells[cell.pos.row][cell.pos.col+koef]){cell.cellsAround.push(cells[cell.pos.row][cell.pos.col+koef]);if(cells[cell.pos.row][cell.pos.col+koef].isMine){minesCounter++;}}koef=1;}cell.minesAround=minesCounter;}});});this.setState({cells:cells});}},{key:\"render\",value:function render(){var _this$state3=this.state,result=_this$state3.result,cells=_this$state3.cells;return React.createElement(\"div\",{className:\"App\"},React.createElement(Result,{result:result}),React.createElement(\"div\",{className:\"tableCells\"},React.createElement(TableCells,{cells:cells,openCell:this.openCell,markCell:this.markCell}),React.createElement(Button,{onClick:this.restart,children:'restart',className:'button-restart'})));}}]);return App;}(Component);var TableCells=function TableCells(_ref){var cells=_ref.cells,openCell=_ref.openCell,markCell=_ref.markCell;var tableCells=cells.map(function(el,i){var cellsArr=el.map(function(cell,j){var content=null;if(cell.isMine){content='*';}else if(cell.minesAround){content=\"\".concat(cell.minesAround);}return React.createElement(\"div\",{className:\"cell \".concat(cell.state),key:\"cell-\".concat(cell.id),onClick:function onClick(){return openCell(cell.pos);},onContextMenu:function onContextMenu(e){e.preventDefault();return markCell(cell.pos);}},React.createElement(\"div\",{className:\"value\"},content));});return React.createElement(\"div\",{className:\"cellsRow\",key:\"cellsRow-\".concat(i)},cellsArr);});return React.createElement(React.Fragment,null,tableCells);};var Button=function Button(_ref2){var onClick=_ref2.onClick,_ref2$className=_ref2.className,className=_ref2$className===void 0?'':_ref2$className,children=_ref2.children;return React.createElement(\"button\",{onClick:onClick,className:className,type:\"button\"},children);};var Result=function Result(_ref3){var result=_ref3.result;var title=result.isWin?'YOU WIN!':'GAME OVER';var titleState=result.open?'result open':'result close';return React.createElement(\"div\",{className:titleState},title);};export default App;","map":{"version":3,"sources":["/home/nick/git/minesweeper/src/App.tsx"],"names":["React","Component","_","require","App","props","state","cellsMount","row","col","minesMount","result","isWin","open","winTitles","cells","Array","openCell","bind","markCell","restart","pos","updatedCells","map","el","isMine","cell","openedEmpty","i","length","j","cellsAround","minesAround","includes","id","push","setState","checkResult","action","rightMarked","wrongMarked","arr","shuffle","range","minesCells","cellCounter","koef","minesCounter","TableCells","tableCells","cellsArr","content","e","preventDefault","Button","onClick","className","children","Result","title","titleState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nconst _:any = require('underscore')\n\ninterface Pos{\n  row: number,\n  col: number\n}\ninterface Cell{ \n  id: number,\n  pos: {\n    row: number,\n    col: number\n  },\n  isMine: boolean,\n  cellsAround: Cell[],\n  minesAround: null | number,\n  state: string,\n}\n\ninterface State{\n  cellsMount: {\n    row: number,\n    col: number,\n  },\n  minesMount: number,\n  result: {isWin: boolean, open: boolean},\n  winTitles: [string, string],\n  cells: Cell[][]\n}\n\nclass App extends Component<any, State> {\n  constructor(props:any) {\n    super(props);\n    this.state = {\n      cellsMount: {\n        row: 8,\n        col: 10,\n      },\n      minesMount: 10,\n      result: {isWin: false, open: false},\n      winTitles: ['YOU WIN!', 'GAME OVER'],\n      cells: new Array<Array<Cell>>()\n    };\n\n    this.openCell = this.openCell.bind(this)\n    this.markCell = this.markCell.bind(this)\n    this.restart = this.restart.bind(this)\n  }\n\n  openCell(pos: Pos):void {\n    const updatedCells = this.state.cells.map( (el: Cell[]) => el);\n\n    if(updatedCells[pos.row][pos.col].state !== 'mark'){\n      updatedCells[pos.row][pos.col].state = 'open';\n\n      if(updatedCells[pos.row][pos.col].isMine){\n        updatedCells.map( (el: Cell[]) => {\n          el.map( (cell: Cell) => {\n            if(cell.isMine){\n              cell.state = 'open mine inactive'\n            }else{\n              cell.state = `${cell.state} inactive`\n            }\n          })\n        })\n      }else{\n        const openedEmpty:number[]  = [];\n        for(let i = 0; i < updatedCells.length; i++){\n          for(let j = 0; j < updatedCells[i].length; j++){\n            if(updatedCells[i][j].cellsAround \n              && updatedCells[i][j].minesAround === 0 \n              && updatedCells[i][j].state === 'open' \n              && !openedEmpty.includes(updatedCells[i][j].id)){\n                updatedCells[i][j].cellsAround.map( (cell: Cell) => {\n                  cell.state = 'open';\n                })\n                openedEmpty.push(updatedCells[i][j].id);\n                i = 0;\n                j = 0;\n            }\n          }\n        }\n      }\n\n      this.setState({cells: updatedCells});\n      this.checkResult('open',updatedCells);\n    }\n  }\n\n  markCell(pos: Pos):void {\n    const updatedCells = this.state.cells.map( (el: Cell[]) => el);\n\n    if(updatedCells[pos.row][pos.col].state === 'close'){\n      updatedCells[pos.row][pos.col].state = 'mark';\n    }else if(updatedCells[pos.row][pos.col].state === 'mark'){\n      updatedCells[pos.row][pos.col].state = 'close'\n    }\n\n    this.setState({cells: updatedCells});\n    this.checkResult('mark',updatedCells);\n  }\n\n  checkResult(action: string, updatedCells: Cell[][]):void {\n    if(action === 'mark'){\n      let rightMarked = 0;\n      let wrongMarked = 0;\n      updatedCells.map( (el: Cell[]) => {\n        el.map( (cell: Cell) => {\n          if(cell.state === 'mark'){\n            if(cell.isMine){\n              rightMarked++;\n            }else{\n              wrongMarked++;\n            }\n          }\n        })\n      });\n\n      const isWin:boolean = (rightMarked === this.state.minesMount && !wrongMarked) ? true : false\n\n      if(isWin){\n        updatedCells.map( (el: Cell[]) => {\n          el.map( (cell: Cell) => {\n            cell.state = cell.state + ' inactive'\n          })\n        })\n      }\n\n      if(isWin){\n        this.setState({cells: updatedCells, result: {isWin, open: true}})\n      }\n    }\n    if(action === 'open'){\n      let isWin:boolean = true;\n      updatedCells.map( (el: Cell[]) => {\n        el.map( (cell: Cell) => {\n          if(cell.state === 'open mine inactive'){\n            isWin = false\n          }\n        })\n      })\n\n      if(!isWin){\n        this.setState({result: {isWin, open: true}})\n      }\n    }\n  }\n\n  restart():void {\n    const {\n      minesMount,\n      cellsMount,\n    } = this.state;\n\n    \n    const arr:number[] = _.shuffle(_.range(cellsMount.row * cellsMount.col));\n    const minesCells:number[] = _.range(minesMount).map( (el:number) => arr[el] );\n\n    let cells:Cell[][] = new Array<Array<Cell>>();\n    let cellCounter:number = 0;\n    for(let i = 0; i < cellsMount.row; i++){\n      cells[i] = new Array<Cell>();\n      for(let j = 0; j < cellsMount.col; j++){\n        const cell:Cell = {\n          id: cellCounter,\n          pos: {\n            row: i,\n            col: j\n          },\n          isMine: minesCells.includes(cellCounter),\n          cellsAround: new Array<Cell>(),\n          minesAround: null,\n          state: 'close',\n        }\n        cells[i].push(cell);\n        cellCounter++;\n      }\n    }\n\n    cells.map((el:Cell[]) => {\n      el.map((cell:Cell) => {\n        if(!cell.isMine){\n            let koef:number = -1;\n            let minesCounter:number = 0;\n            for(let i = 0; i < 3; i++){\n              if(cells[cell.pos.row - 1] && cells[cell.pos.row - 1][cell.pos.col + koef]){\n                cell.cellsAround.push(cells[cell.pos.row - 1][cell.pos.col + koef])\n                if(cells[cell.pos.row - 1][cell.pos.col + koef].isMine){\n                  minesCounter++;\n                }\n              }\n              if(cells[cell.pos.row + 1] && cells[cell.pos.row + 1][cell.pos.col + koef]){\n                cell.cellsAround.push(cells[cell.pos.row + 1] && cells[cell.pos.row + 1][cell.pos.col + koef]);\n                if(cells[cell.pos.row + 1][cell.pos.col + koef].isMine){\n                  minesCounter++;\n                }\n              }\n              koef++;\n            }\n            koef = -1;\n            for(let i = 0; i < 2; i++){\n              if(cells[cell.pos.row][cell.pos.col + koef]){\n                cell.cellsAround.push(cells[cell.pos.row][cell.pos.col + koef])\n                if(cells[cell.pos.row][cell.pos.col + koef].isMine){\n                  minesCounter++;\n                }\n              }\n              koef = 1;\n            }\n            cell.minesAround = minesCounter;\n        }\n      })\n    })\n\n    this.setState({cells: cells, result: {isWin: this.state.result.isWin, open: false}});   \n  }\n\n  componentDidMount():void {\n    const {\n      minesMount,\n      cellsMount\n    } = this.state;\n\n    \n    const arr:number[] = _.shuffle(_.range(cellsMount.row * cellsMount.col));\n    const minesCells:number[] = _.range(minesMount).map( (el:number) => arr[el] );\n\n    let cells:Cell[][] = new Array<Array<Cell>>();\n    let cellCounter = 0;\n    for(let i = 0; i < cellsMount.row; i++){\n      cells[i] = new Array<Cell>();\n      for(let j = 0; j < cellsMount.col; j++){\n        const cell = {\n          id: cellCounter,\n          pos: {\n            row: i,\n            col: j\n          },\n          isMine: minesCells.includes(cellCounter),\n          cellsAround: new Array<Cell>(),\n          minesAround: null,\n          state: 'close',\n        }\n        cells[i].push(cell);\n        cellCounter++;\n      }\n    }\n\n    cells.map((el:Cell[]) => {\n      el.map((cell:Cell) => {\n        if(!cell.isMine){\n          let koef:number = -1;\n          let minesCounter:number = 0;\n          for(let i = 0; i < 3; i++){\n            if(cells[cell.pos.row - 1] && cells[cell.pos.row - 1][cell.pos.col + koef]){\n              cell.cellsAround.push(cells[cell.pos.row - 1][cell.pos.col + koef])\n              if(cells[cell.pos.row - 1][cell.pos.col + koef].isMine){\n                minesCounter++;\n              }\n            }\n            if(cells[cell.pos.row + 1] && cells[cell.pos.row + 1][cell.pos.col + koef]){\n              cell.cellsAround.push(cells[cell.pos.row + 1] && cells[cell.pos.row + 1][cell.pos.col + koef]);\n              if(cells[cell.pos.row + 1][cell.pos.col + koef].isMine){\n                minesCounter++;\n              }\n            }\n            koef++;\n          }\n          koef = -1;\n          for(let i = 0; i < 2; i++){\n            if(cells[cell.pos.row][cell.pos.col + koef]){\n              cell.cellsAround.push(cells[cell.pos.row][cell.pos.col + koef])\n              if(cells[cell.pos.row][cell.pos.col + koef].isMine){\n                minesCounter++;\n              }\n            }\n            koef = 1;\n          }\n          cell.minesAround = minesCounter;\n        }\n      })\n    })\n\n    this.setState({cells: cells});\n  }\n\n  render() {\n    const {\n      result,\n      cells\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Result\n          result = {result}\n        />\n        <div className = 'tableCells'>\n        <TableCells \n          cells = {cells}\n          openCell = {this.openCell}\n          markCell = {this.markCell}\n        />\n        <Button \n          onClick = {this.restart}\n          children = {'restart'}\n          className = {'button-restart'}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface TableCellsProps {\n  cells: Cell[][],\n  openCell:(pos:Pos) => void,\n  markCell:(pos:Pos) => void\n}\n\nconst TableCells = ({\n  cells,\n  openCell,\n  markCell\n}:TableCellsProps) => {\n  let tableCells = cells.map((el:Cell[], i:number) => {\n      let cellsArr = el.map((cell:Cell, j:number) => {\n        let content:string | null = null;\n        if(cell.isMine){\n          content = '*'\n        }else if(cell.minesAround){\n          content = `${cell.minesAround}`\n        }\n          return  (\n            <div \n              className = {`cell ${cell.state}`}\n              key = {`cell-${cell.id}`}\n              onClick = { () => openCell(cell.pos)}\n              onContextMenu = { (e:React.MouseEvent) => {\n                e.preventDefault();\n                return markCell(cell.pos);\n              }}\n            >\n              <div className = 'value'>\n                {content}\n              </div>\n            </div>\n            )\n      });\n      return (\n        <div className = 'cellsRow' key={`cellsRow-${i}`}>{cellsArr}</div>\n        )\n    })\n    return (<>{tableCells}</>)\n}\n\ninterface ButtonProps{\n  onClick:(e:React.MouseEvent) => void,\n  className: string,\n  children: React.ReactNode\n}\n\nconst Button = ({ onClick, className = '', children }:ButtonProps) =>\n  <button\n    onClick={onClick}\n    className={className}\n    type=\"button\"\n  >\n    {children}\n  </button>\n\n\ninterface ResultProps{\n  result: {isWin: null | boolean, open: boolean}\n}\nconst Result = ({result}:ResultProps) =>{\n  let title:string = result.isWin ? 'YOU WIN!' : 'GAME OVER';\n  let titleState:string = result.open ? 'result open' : 'result close';\n  return (\n    <div\n      className = {titleState}\n    >{title}</div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}